import requests
import sys
import subprocess


def run_command(command):
    output = subprocess.check_output(command, shell=True)
    return output.decode().strip()


class ToolSetup:

    def __init__(self, download_path):
        self.download_path = download_path
    
    def download_file(self, url, download_path):

        try:
            r = requests.get(url, allow_redirects=True)

            download_file = url.split("/")[int(len(url.split("/"))-1)]
            open(download_path+"/"+str(download_file), 'wb').write(r.content)
            
        except KeyboardInterrupt:
            print("[!] File download failed".upper())
            sys.exit()
            
        except Exception as e:
            print(f"[ERROR]\t{e}")
            sys.exit()

    def download_github_file(self, github_url):
        try:
            run_command(f"git clone {github_url}")
        
        except Exception as e:
            print(f"[-] {e}".upper())
            pass


def main():
    
    tools_download_path = "Tools/"

    github_downloads = [
        "https://github.com/swisskyrepo/PayloadsAllTheThings.git",
        "https://github.com/danielmiessler/SecLists.git",
        "https://github.com/wpscanteam/wpscan.git",
        "https://github.com/1N3/Sn1per.git",
        "https://github.com/t3l3machus/hoaxshell.git",
        "https://github.com/jonaslejon/malicious-pdf.git"
        "https://github.com/htr-tech/zphisher.git",
        "https://github.com/gophish/gophish.git",
        "https://github.com/intrudir/BypassFuzzer.git",
        "https://github.com/aboul3la/Sublist3r.git",
        "https://github.com/maurosoria/dirsearch.git",
        "https://github.com/sqlmapproject/sqlmap.git",
        "https://github.com/rapid7/metasploit-framework.git",
        "https://github.com/hashcat/hashcat.git",
        "https://github.com/rapid7/metasploit-payloads.git",
        "https://github.com/trustedsec/social-engineer-toolkit.git",
        "https://github.com/aircrack-ng/aircrack-ng.git",
        "https://github.com/openwall/john.git",
        "https://github.com/openwall/johnny.git",
        "https://github.com/sullo/nikto.git",
        "https://github.com/tecknicaltom/dsniff.git"
    ]

    for repository in github_downloads:
        ToolSetup(tools_download_path).download_github_file(repository)


if __name__ == '__main__':

    main()
