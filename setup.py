import requests
import sys
import os
import subprocess
from colorama import init, Fore, Back

def banner(titel):
    init()
    print(Fore.RED+"*"*65+Fore.RESET)
    print(17*"-"+"\tCREATED BY 4N4RCH0\t"+"-"*17)
    print(Back.BLACK+Fore.RED+pyfiglet.figlet_format(titel, font="avatar")+Back.RESET+Fore.RESET)
    print(Fore.RED+"*"*65+Fore.RESET)

def run_command(command):
    output = subprocess.check_output(command, shell=True)
    return output.decode().strip()

def create_folder(folder_name):
    try:
        os.mkdir(folder_name)
    except:
        pass

def deploy_environment(root_folder, folder_struct):
    create_folder(root_folder)
    print("\n[+] Environment root folder created")
    for folder in folder_struct:
        print(f"[+] {folder} created.")
        create_folder(folder_name=root_folder+"/"+folder)
    print("[+] Folder environment created.\n")

def clone_repos(github_repositories, destination_folder):
    print("[ DOWNLOADING PENETRATION TESTING SUITE ]")
    for repo in github_repositories:
        clone_command = f"git clone {repo} {destination_folder}/{repo.split('/')[-1].split(".git")[0]}"
        subprocess.run(clone_command.split(), capture_output=True)
        print(f"[+] {repo.split('/')[-1]}")

def main():

    # Creating the root folder for the environment
    root_folder = "Pentest-Environment"

    # Important folder basement to structure files as logical as possible
    folder_struct = [
        "Development",
        "Files",
        "Github",
        "Pentest-Documents",
        "Pentest-Documents/Reports"
        "Scripts",
        "Scripts/Powershell"
        "Scripts/Bash"
        "System",
        "Tools"
    ]
    
    # OnyÄºy tool sources locted on github
    github_repositories = [
        "https://github.com/wpscanteam/wpscan.git",
        "https://github.com/1N3/Sn1per.git",
        "https://github.com/t3l3machus/hoaxshell.git",
        "https://github.com/jonaslejon/malicious-pdf.git"
        "https://github.com/htr-tech/zphisher.git",
        "https://github.com/gophish/gophish.git",
        "https://github.com/intrudir/BypassFuzzer.git",
        "https://github.com/aboul3la/Sublist3r.git",
        "https://github.com/maurosoria/dirsearch.git",
        "https://github.com/sqlmapproject/sqlmap.git",
        "https://github.com/rapid7/metasploit-framework.git",
        "https://github.com/hashcat/hashcat.git",
        "https://github.com/rapid7/metasploit-payloads.git",
        "https://github.com/trustedsec/social-engineer-toolkit.git",
        "https://github.com/aircrack-ng/aircrack-ng.git",
        "https://github.com/openwall/john.git",
        "https://github.com/openwall/johnny.git",
        "https://github.com/sullo/nikto.git",
        "https://github.com/tecknicaltom/dsniff.git"
    ]

    github_wordlists = [
        "https://github.com/swisskyrepo/PayloadsAllTheThings.git",
        "https://github.com/danielmiessler/SecLists.git"   
    ]

    tool_destination = f"{root_folder}/Tools/"
    wordlist_destination = f"{root_folder}/Tools/"

    deploy_environment(root_folder=root_folder, folder_struct=folder_struct)

    clone_repos(github_repositories, tool_destination)
    
    print("\n[+] Pentest Environment Setup process finished.".upper())

if __name__ == '__main__':

    banner("Penetrationtest Setup")

    main()
