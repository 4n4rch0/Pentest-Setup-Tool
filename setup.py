import requests
import sys
import os
import subprocess


def run_command(command):
    output = subprocess.check_output(command, shell=True)
    return output.decode().strip()

def create_folder(folder_name):
    try:
        os.mkdir(folder_name)
    except:
        pass

def deploy_environment(root_folder, folder_struct):
    create_folder(root_folder)
    print("[+] Environment root folder created")
    for folder in folder_struct:
        print(f"[+] {folder} created.")
        create_folder(folder_name=root_folder+"/"+folder)
    print("[+] Folder environment created.\n")
    
def main():

    root_folder = "Pentest-Environment"

    folder_struct = [
        "Development",
        "Files",
        "Github",
        "Pentest-Documents",
        "Scripts",
        "System",
        "Tools"
    ]
    
    github_repositories = [
        "https://github.com/swisskyrepo/PayloadsAllTheThings.git",
        "https://github.com/danielmiessler/SecLists.git",
        "https://github.com/wpscanteam/wpscan.git",
        "https://github.com/1N3/Sn1per.git",
        "https://github.com/t3l3machus/hoaxshell.git",
        "https://github.com/jonaslejon/malicious-pdf.git"
        "https://github.com/htr-tech/zphisher.git",
        "https://github.com/gophish/gophish.git",
        "https://github.com/intrudir/BypassFuzzer.git",
        "https://github.com/aboul3la/Sublist3r.git",
        "https://github.com/maurosoria/dirsearch.git",
        "https://github.com/sqlmapproject/sqlmap.git",
        "https://github.com/rapid7/metasploit-framework.git",
        "https://github.com/hashcat/hashcat.git",
        "https://github.com/rapid7/metasploit-payloads.git",
        "https://github.com/trustedsec/social-engineer-toolkit.git",
        "https://github.com/aircrack-ng/aircrack-ng.git",
        "https://github.com/openwall/john.git",
        "https://github.com/openwall/johnny.git",
        "https://github.com/sullo/nikto.git",
        "https://github.com/tecknicaltom/dsniff.git"
    ]

    deploy_environment(root_folder=root_folder, folder_struct=folder_struct)

if __name__ == '__main__':

    main()
